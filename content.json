{"meta":{"title":"Tri's","subtitle":"一些關於前端技術的筆記和剪貼簿","description":null,"author":"Trina Lu","url":"http://tri613.github.io"},"pages":[],"posts":[{"title":".bind(), .apply() and .call()","slug":"bind-apply-and-call","date":"2017-06-15T06:25:31.000Z","updated":"2017-06-20T05:19:19.003Z","comments":true,"path":"2017/06/15/bind-apply-and-call/","link":"","permalink":"http://tri613.github.io/2017/06/15/bind-apply-and-call/","excerpt":"常常忘記這三個在幹嘛所以整理一下日後好查詢。","text":"常常忘記這三個在幹嘛所以整理一下日後好查詢。 .bind()1func.bind(thisArg[, arg1[, arg2[, ...]]]); bind doesn’t execute function immediately,but returns wrapped apply function with certain context (for later execution): 123456789function greeting(name) &#123; this.hello = this.hello || \"Hello\"; return `$&#123;this.hello&#125;, $&#123;name&#125;!`;&#125;const greetingInJapanese = greeting.bind(&#123;hello: \"こんばんわ\"&#125;);greeting(\"Trina\"); // Hello, Trina!greetingInJapanese(\"Trina\"); // こんばんわ, Trina! .apply() / .call().call() or .apply() invokes the funciton immediately, and modify the context. 12func.call(context, argument1, argument2, ...);func.apply(context, [argument1, argument2, ...]); NoticeBeware that arrow functions could not be bound to another context. MDN: Arrow function #No binding of this Sources http://stackoverflow.com/questions/15455009/javascript-call-apply-vs-bind the this bug in javascript","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://tri613.github.io/tags/javascript/"}]},{"title":"Javascript's by value and by reference","slug":"by-value-and-by-reference","date":"2017-01-22T16:26:39.000Z","updated":"2017-06-20T05:19:56.739Z","comments":true,"path":"2017/01/23/by-value-and-by-reference/","link":"","permalink":"http://tri613.github.io/2017/01/23/by-value-and-by-reference/","excerpt":"這篇筆記是從 Javascript30 的 Day14 - JavaScript References VS Copying 整理下來的。 記得在stackoverflow上面也有人提出其實JS沒有分所謂的by value和by reference，而是以變數的值是否immutable的差別來區分，不過我覺得這樣子的分法對我來說比較好理解。","text":"這篇筆記是從 Javascript30 的 Day14 - JavaScript References VS Copying 整理下來的。 記得在stackoverflow上面也有人提出其實JS沒有分所謂的by value和by reference，而是以變數的值是否immutable的差別來區分，不過我覺得這樣子的分法對我來說比較好理解。 1. By Value (Copying)一般來說只要是 strings, numbers 和 booleans，都可以說是 by value。 12345let a = \"string\";let b = a;console.log(a, b); // \"string\", \"string\"b = \"another string\";console.log(a, b); // \"string\", \"another string\" 2. By Reference如果是 array 或者 object，則會以 by reference 的方式傳遞。 12345678910111213let person1 = &#123; name: \"Trina\", age: 100, gender: \"female\"&#125;;let person2 = person1;console.log(person1, person2);//Object &#123;name: \"Trina\", age: 100, gender: \"female\"&#125;, Object &#123;name: \"Trina\", age: 100, gender: \"female\"&#125;person2.name = \"Sherry\";console.log(person2.name); //\"Sherry\"console.log(person1.name); //\"Sherry\" --&gt; person1 has been changed too! Array 也是一樣的道理： 123456789let players = [\"Trina\", \"Sherry\", \"Pisuke\", \"Kuma\"];let team = players;console.log(players, team);// [\"Trina\", \"Sherry\", \"Pisuke\", \"Kuma\"],// [\"Trina\", \"Sherry\", \"Pisuke\", \"Kuma\"]team[3] = \"Usagi\";console.log(players);// [\"Trina\", \"Sherry\", \"Pisuke\", \"Usagi\"] --&gt; players has been changed too! 要解決這個問題，就必須把Object或Array直接Copy一份才行。 Copying an array 12345//以下幾種方式皆可行const teamCopy1 = players.slice();const teamCopy2 = [].concat(players);const teamCopy3 = [...players]; //es6const teamCopy4 = Array.from(players); Copying an object 123const personCopy = Object.assign(&#123;&#125;, person, &#123; newProperty: \"some additional property for personCopy\"&#125;); 要注意的是以上的方法是 Shallow copy，如果 Object 本身是二維以上的話，使用上面的方式還是會有 By reference的情況發生。 1234567891011121314let me = &#123; name: \"Trina\", age: 24, social: &#123; twitter: \"@tri613\", github: \"tri613\" &#125;&#125;;let me2 = Object.assign(&#123;&#125;, me);me2.social.twitter = \"@nomoney\";console.log(me.social);//&#123;twitter: \"@nomoney\", github: \"tri613\"&#125; --&gt; Changed! 這種情況需要靠Deep clone來解決，最簡單 (但效率表現沒那麼好) 的方式 是直接使用JSON格式encode再decode的方式解決。 1const meCopy = JSON.parse(JSON.stringify(me)); 其他的方式可以參考stackoverflow上面的這篇。","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://tri613.github.io/tags/javascript/"},{"name":"i-dont-know-JS","slug":"i-dont-know-JS","permalink":"http://tri613.github.io/tags/i-dont-know-JS/"}]},{"title":"Click events not working on Safari","slug":"safari-click-event","date":"2017-01-12T15:54:29.000Z","updated":"2017-06-20T05:20:14.291Z","comments":true,"path":"2017/01/12/safari-click-event/","link":"","permalink":"http://tri613.github.io/2017/01/12/safari-click-event/","excerpt":"Safari 無法觸發點擊事件今天準備要下班的時候被同事抓住說safari上出現了一個bug，說按鈕怎樣點擊都沒有反應，並且只有safari有這個問題。 原本以為是js又出了什麼問題，殊不知用console直接trigger點擊事件完全ＯＫ證明了是safari無法捕捉到使用者點擊的事件。 後來一查發現這根本是個safari的bug，官方還偷偷把這部分的說明拿掉（囧），根本就是想偷偷把bug隱藏起來啊！！！（重點是這個bug你又沒修掉！！！） 僅此紀錄解決方法，以後大家少走點冤枉路。ＱＱ","text":"Safari 無法觸發點擊事件今天準備要下班的時候被同事抓住說safari上出現了一個bug，說按鈕怎樣點擊都沒有反應，並且只有safari有這個問題。 原本以為是js又出了什麼問題，殊不知用console直接trigger點擊事件完全ＯＫ證明了是safari無法捕捉到使用者點擊的事件。 後來一查發現這根本是個safari的bug，官方還偷偷把這部分的說明拿掉（囧），根本就是想偷偷把bug隱藏起來啊！！！（重點是這個bug你又沒修掉！！！） 僅此紀錄解決方法，以後大家少走點冤枉路。ＱＱ 原因 其實它就是bug，結束。（欸） 看mdn上面的說法是因為safari自己有定義哪些elements是可點擊哪些是不可點擊的，所以如果點擊對象是nonclickable，自然就不會觸發click event。（啊結果你官方文件又沒說你定義哪些是可點擊的！！！簡直要爆氣！！！） 還好MDN上面有列出來，可以看這邊參考。 解法紀錄一下兩個我覺得比較實用的解法備存。（不然哪天文件消失又要哭哭了ＱＱ） 為點擊對象添加 cursor: pointer 的css style 添加onclick=&quot;void(0)&quot;的屬性 我今天是使用加css的方式，然後就好了。（囧）Apple我明明這麼相信你的技術力啊！！！！！ 參考文件 iOS Safari 点击事件无效(我今天倉促的找到第一個解法來源是這裡，超級感謝ＱＱ) MDN: click#Safari_Mobile 至於Apple自己的官方文件則是都被移掉了⋯⋯徹底無言⋯⋯","categories":[],"tags":[{"name":"ios","slug":"ios","permalink":"http://tri613.github.io/tags/ios/"},{"name":"safari","slug":"safari","permalink":"http://tri613.github.io/tags/safari/"}]},{"title":"Javascript closure","slug":"javascript-closure","date":"2016-12-15T04:50:54.000Z","updated":"2017-06-20T05:20:50.751Z","comments":true,"path":"2016/12/15/javascript-closure/","link":"","permalink":"http://tri613.github.io/2016/12/15/javascript-closure/","excerpt":"Closure一直是我覺得JS裡面很玄的東西，最近又熊熊想到(?)回去好好看它，這篇主要是記錄自己卡點的地方，如果有錯歡迎指正。","text":"Closure一直是我覺得JS裡面很玄的東西，最近又熊熊想到(?)回去好好看它，這篇主要是記錄自己卡點的地方，如果有錯歡迎指正。 定義Closures are functions that refer to independent (free) variables (variables that are used locally, but defined in an enclosing scope). In other words, these functions ‘remember’ the environment in which they were created. Mozilladeveloper.mozilla.org/en-US/docs/Web/JavaScript/Closures Closures can simply be defined as an inner function in JavaScript has the access to all variable define in outer functions.So when a function is invoked in JavaScript , it creates a new execution context. This context has access to Parent objects with the arguments for current function get invoked, this execution context also has access to the variables declared outside of its scope. Programming Concepts Helpconceptf1.blogspot.tw/2013/11/javascript-closures.html 考慮以下的例子： greeting 被賦值的時候，會觸發並執行 anonymous function，這個anonymous function則會回傳另一個function。而這個function，也就是閉包，它記住了它的環境上下文，所以它可以取得在它scope之外的變數 me，即使 me 的值被改變，greeting仍然可以取得 me 正確的值。 這就是一個最簡單的closure。 Creating closures in loops: A common mistakeMozilla關於Closure的文件上有一段Creating closures in loops: A common mistake，裡面的例子我卡了很久才想通：(這邊是直接用Mozilla上面的fiddle) 照理來說，我們希望在focus不同input的時候，會出現各自的提示訊息，但這邊卻只會顯示最後一筆 Your age (you must be over 16)。原因是在創建onfocus的callback的時候，它其實是一個closure，所以它記得的是被創建時的上下文，也就是說onfocus被觸發的時候，它的callback會知道去哪裡找 item.help 的值，但在for loop完了之後，item.help的值已經變成 Your age (you must be over 16)了，而這也是為什麼上面的範例中，不管選哪個它都只會顯示同一個訊息。 12345678for (var i = 0; i &lt; helpText.length; i++) &#123; var item = helpText[i]; document.getElementById(item.id).onfocus = function() &#123; showHelp(item.help); &#125;&#125;// 在for loop外面印出itemconsole.log(item); // &#123;'id': 'age', 'help': 'Your age (you must be over 16)'&#125; 所以說Closure基本上就是一個inner function會記得被創建時的外層上下文環境，而這個inner function可以取得parent scope的變數，它知道變數該指向的對象，但並不包含變數當下的值。 Creating closures in loops: Solutions解法在 Mozilla 上面都有提供，這邊稍微再補充那裡面提到的第一種方式。 根據 Mozilla 的說明，之前 for loop 會出問題，是因為所有的callback function在創建時，全部都指向了同一個環境，所以指向的item都會是同一個，不像上面是各自創了一個獨立環境。 這個說法對我來說有點抽象，我比較喜歡Programming Concepts Help的解釋： If we pass a parameter function makes its own local copy of the variable (if it is not object type which pass by reference). So each time function has its own local copy of variable which not get updated by loop iteration. 豁然開朗啊！JS真是博大精深。(謎) 參考資料 Mozilla - Closures Programming Concepts Help","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://tri613.github.io/tags/javascript/"}]},{"title":"Setup Google login","slug":"google-login","date":"2016-11-23T05:53:46.000Z","updated":"2017-06-20T05:21:04.494Z","comments":true,"path":"2016/11/23/google-login/","link":"","permalink":"http://tri613.github.io/2016/11/23/google-login/","excerpt":"假設已經在 Google API Console 完成專案的建置並取得Client Id了，有三種方式可以設置Google登入。","text":"假設已經在 Google API Console 完成專案的建置並取得Client Id了，有三種方式可以設置Google登入。 1. Setup with meta12345678&lt;!-- set client id in meta --&gt;&lt;meta name=\"google-signin-client_id\" content=\"your-client-id.apps.googleusercontent.com\"&gt;&lt;!-- load google library --&gt;&lt;script src=\"https://apis.google.com/js/platform.js\" async defer&gt;&lt;/script&gt;&lt;!-- set up login btn with classname `g-signin2` --&gt;&lt;div id=\"google-login-btn\" class=\"g-signin2\" data-onsuccess=\"onSuccess\"&gt;&lt;/div&gt; 2. Setup with gapi.auth212345&lt;!-- load google library and specify callback function --&gt;&lt;script src=\"https://apis.google.com/js/platform.js?onload=onloadCallback\" async defer&gt;&lt;/script&gt;&lt;!-- set up login btn (no classname needed, only ID) --&gt;&lt;div id=\"google-login-btn\"&gt;&lt;/div&gt; 123456789101112131415161718192021222324//implement callback functionvar auth2;function onloadCallback() &#123; gapi.load('auth2', function() &#123; auth2 = gapi.auth2.init(&#123; client_id: 'your-client-id.apps.googleusercontent.com' &#125;); //attach event callback for clicking login btn auth2.attachClickHandler('google-login-btn', &#123;&#125;, onSuccess, onFailure); &#125;); //render the default style google btn gapi.signin2.render('google-login-btn');&#125;function onSuccess (googleUser) &#123; var profile = googleUser.getBasicProfile(); console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead. console.log('Name: ' + profile.getName()); console.log('Image URL: ' + profile.getImageUrl()); console.log('Email: ' + profile.getEmail());&#125;function onFailure(error) &#123; console.log(error);&#125;; 在這可以取得使用者的token讓後端去驗證使用者身分，並進行一些登入手續處理。（像是寫Session幹嘛的） 123456789101112131415//modify the onSuccess function to get user token and send it to serverfunction onSuccess (googleUser) &#123; var id_token = googleUser.getAuthResponse().id_token; sendUserTokenToServer(id_token);&#125;function sendUserTokenToServer(token) &#123; var xhr = new XMLHttpRequest(); xhr.open('POST', '/verify-user-token.php'); xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); xhr.onload = function() &#123; console.log('Signed in as: ' + xhr.responseText); &#125;; xhr.send('token=' + token);&#125; 1234567891011121314151617181920212223//verify-user-token.php$token = $_POST['token'];$ch = curl_init();curl_setopt_array($ch, array( CURLOPT_URL =&gt; 'https://www.googleapis.com/oauth2/v3/tokeninfo?id_token='.$token, CURLOPT_RETURNTRANSFER =&gt; true, CURLOPT_POST =&gt; \"GET\", CURLOPT_SSL_VERIFYPEER =&gt; false, CURLOPT_SSL_VERIFYHOST =&gt; false));$response = curl_exec($ch);curl_close($ch);$data = json_decode($response);//記得先驗證 $data-&gt;aud 是否和client-id相同if ($data-&gt;aud == MY_CLIENT_ID) &#123; echo $data-&gt;name; //here's the user name! echo $data-&gt;sub; //使用者的 unique google id&#125; else &#123; echo 'User not valid.';&#125; 3. Login with backend server (導頁)也可以選擇直接用後端和Google溝通，這樣就不需要載入Google的JS函式庫或寫任何的js script，只需要在前端頁面加上連到登入導頁的連結即可。 Google本身提供了許多語言的sdk，這邊我使用的是 Google’s api php client。 實作這個功能至少需要兩個頁面(吧)： Redirect to Google page這個Redirect to Google page只需要單純實現導頁至Google登入頁面即可。 123456789101112//signin.phprequire_once '/your/path/to/vendor/autoload.php';$client = new Google_Client();$client-&gt;setAuthConfig('/your/path/to/client_secret.json'); //這個json檔可以從Google API Console下載取得$client-&gt;addScope('profile');//set redirect uri$client-&gt;setRedirectUri('http://' . $_SERVER['HTTP_HOST'] . '/callback.php');$auth_url = $client-&gt;createAuthUrl();header('Location: ' . filter_var($auth_url, FILTER_SANITIZE_URL));exit(); check all the scopes that you can use here. Google Callback page使用者在Google登入頁面上登入完畢後，Google會導回當初在前面設定的Redirect URI，並附上GET參數code。Redirect URI必須存在於Google API Console的設定裡面。 一開始我一直收到 redirect_uri_mismatch 的錯誤，不知道是不是我在同一個憑證下設了兩個redirect_uri的關係，反正我後來直接重開一個新的憑證就好了。(囧) 123456789101112//callback.phprequire_once '/your/path/to/vendor/autoload.php';$client = new Google_Client();$client-&gt;setAuthConfig('/your/path/to/client_secret.json');$client-&gt;addScope('profile');$client-&gt;authenticate($_GET['code']);$token = $client-&gt;getAccessToken();$token_data = $client-&gt;verifyIdToken(); 123456789101112131415161718192021222324252627//tokenArray( [access_token] =&gt; [token_type] =&gt; [expires_in] =&gt; [id_token] =&gt; [created] =&gt; )//token_dataArray( [iss] =&gt; [exp] =&gt; [at_hash] =&gt; [aud] =&gt; //檢查這個欄位是否和專案的client_id相同 [sub] =&gt; //uid [email_verified] =&gt; [azp] =&gt; [email] =&gt; [name] =&gt; [picture] =&gt; [given_name] =&gt; [family_name] =&gt; [locale] =&gt; ) 然後就可以透過 $token_data 取得使用者資料和他的uid(sub)了。 $client-&gt;verifyIdToken() 和上面提到 verify-user-token.php的功能是一樣的，只是這邊是用SDK直接問，上面則是用curl的方式去問 google api 而已。 完整範例 這是我自己測試時寫的程式碼，我把它放在github上。 參考文件 Google Sign-In for Websites其實方法大致上都可以在官方文件中找到，上面有些範例也是從官方來的，只是我覺得官方文件不夠友善，有些東西都只說一半還得自己另外google。(囧) OAuth 2.0 Scopes for Google APIs Google API Client Libraries","categories":[],"tags":[{"name":"google","slug":"google","permalink":"http://tri613.github.io/tags/google/"},{"name":"social-login","slug":"social-login","permalink":"http://tri613.github.io/tags/social-login/"}]},{"title":"APNs with HTTP/2","slug":"apns-http2","date":"2016-11-21T09:02:24.000Z","updated":"2017-06-20T05:24:29.528Z","comments":true,"path":"2016/11/21/apns-http2/","link":"","permalink":"http://tri613.github.io/2016/11/21/apns-http2/","excerpt":"這篇是從tumblr上面搬來的，當時發表時間是2016/08/12。 其實我也沒有接過第一版的iOS推播，不過被交付survey新版文件的工作， 就稍微記錄一下幾項看完的重點XD","text":"這篇是從tumblr上面搬來的，當時發表時間是2016/08/12。 其實我也沒有接過第一版的iOS推播，不過被交付survey新版文件的工作， 就稍微記錄一下幾項看完的重點XD 因為anps新版api用的是 HTTP/2，為了能夠與他們的server溝通， PHP版本需要 &gt;= 5.5.24 (我們只有5.4.40) Curl的library版本需要 &gt;= 7.38.0 (我們只有7.19.7) OpenSSL &gt;= 1.0.2e (我們只有1.0.1e) 看起來它需要新的憑證，而這個新版憑證沒有所謂的 ‘test’ 或者是 ‘production’之分，只要建好了， 不管是測試環境還是正式環境都可以使用。以下是官方文件中的摘錄： The HTTP/2-based provider API lets you use a single certificate for both development and production environments. For details on obtaining an Apple Push Notification service (APNs) certificate that works in both environments, read Creating a Universal Push Notification Client SSL Certificate. 新版的運作方式可以不用建立socket，可以改用curl POST方法， 除了接口 &amp; 憑證 (還有程式環境版本問題)，其他內容格式(ex. payload)應該是差不多的。 payload的大小限制從2kb -&gt; 4kb 如果在短時間內一直瘋狂重開連線，apple會認定你是在攻擊然後就把連線關閉。(官方文件好像沒有特別提到後續的處理或結果) 現在新版api會立即回傳response給你，不像之前舊版如果發生錯誤還會有時間差。 至於舊版的錯誤處理，官方文件有提供一些建議 基本上應該就是一直寫一直寫，寫到壞掉的時候，(fwrite的結果為false?) 有可能是滿了或怎樣，就再試著寫一次， 如果還是寫不進去就讀讀看，如果回傳大小為0，就表示連線可能因為是大小問題or格試錯誤等等被關掉了， 但假如大小為6bytes，就表示他們有回傳錯誤訊息，然後就可以根據錯誤訊息debug一下這樣。 －－っと、原本是這樣想的，但在stackoverflow看到有人說 $result is always true not mathers if sending was successful or not 看來是我想得太天真ㄌ… ※備註：在這裡有人提到： Any errors cause the TCP socket to be closed, even if valid notifications had been sent over the connection after a single invalid one. This often happens in cases where developers might accidentally mixed push identifiers between Development and Production versions of their app. 感覺我們舊版偶爾會爆炸可能就是因為這個……","categories":[],"tags":[{"name":"apns","slug":"apns","permalink":"http://tri613.github.io/tags/apns/"},{"name":"ios","slug":"ios","permalink":"http://tri613.github.io/tags/ios/"},{"name":"push","slug":"push","permalink":"http://tri613.github.io/tags/push/"}]},{"title":"在mac上設置apache + php + mysql","slug":"mamp","date":"2016-11-21T08:52:52.000Z","updated":"2017-06-20T05:23:58.873Z","comments":true,"path":"2016/11/21/mamp/","link":"","permalink":"http://tri613.github.io/2016/11/21/mamp/","excerpt":"前前提要這篇是從tumblr上面搬來的，當時發表時間是2016/08/25。 前情提要一下本人上上禮拜敗了一台mac pro，想說架個伺服器以便未來開發 原本在windows下我都是懶惰直接灌wamp或xampp這種一次打包好的東西， 所以本來想說mac也來找找有沒有類似的就好了（←很懶 殊不知估狗一下才發現原來mac有內建阿帕契！甚至連PHP都已經裝好了！！ 只有mysql需要自己灌，真是太神拉~~~（灑花） 不過話是這樣說，實際上在setup的過程中還是碰到了不少問題（中途甚至不小心玩壞怒重灌了一次XD），所以還是記錄一下整個過程好了。","text":"前前提要這篇是從tumblr上面搬來的，當時發表時間是2016/08/25。 前情提要一下本人上上禮拜敗了一台mac pro，想說架個伺服器以便未來開發 原本在windows下我都是懶惰直接灌wamp或xampp這種一次打包好的東西， 所以本來想說mac也來找找有沒有類似的就好了（←很懶 殊不知估狗一下才發現原來mac有內建阿帕契！甚至連PHP都已經裝好了！！ 只有mysql需要自己灌，真是太神拉~~~（灑花） 不過話是這樣說，實際上在setup的過程中還是碰到了不少問題（中途甚至不小心玩壞怒重灌了一次XD），所以還是記錄一下整個過程好了。 # 環境 作業系統 OSX 10.11.6 Apache 2.4.18 (Unix) PHP 5.5.36 設定 apache既然mac都已經內建好apache了，就先來啟動apache server看看吧！ 1$ sudo apachectl start 如果可以連到 localhost 就表示成功了！ 接下來就是一些apache的設定等等了， 像我就會把port設成1337然後引入一些需要的module等等。 設定檔位置在 /etc/apache2/httpd.conf ， 在finder下 cmd + shift + g 直接輸入上述位置即可。 我自己的httpd.conf主要是改這些東西： port 改成 1337 1Listen 1337 載入需要的模組 （也就是把前面的＃拿掉） 12LoadModule rewrite_module libexec/apache2/mod_rewrite.so&lt;/span&gt;LoadModule php5_module libexec/apache2/libphp5.so 啟用 Virtual hosts 12# Virtual hostsInclude /private/etc/apache2/extra/httpd-vhosts.conf 加入路徑讀取權限 如果不加，會發生 因為沒有權限而存取被拒的問題。（client denied by server configuration ） 這好像是比較偷懶的權限設法，因為是本地開發沒關係， 對外可能就不是這樣寫了XD 路徑我自己是設成這樣 /Users/tri613/workspace/www/ 123456&lt;Directory &quot;/your/path/to/site/documents&quot;&gt; Options Indexes MultiViews FollowSymLinks AllowOverride All # Apache 2.4 Require all granted&lt;/Directory&gt; 設定user / group 也是跟權限有關的設定，對linux(unix)不是特熟所以只是先設著保險（？） 12User your_user_name Group staff 最後記得伺服器要重開剛才套用的東西才會有作用！ 1$ sudo apachectl restart 設置 virtual host設置virtual hosts就只要修改 etc/apache2/extra/httpd-vhosts.conf 這個檔案就可以了！ 123456789101112131415# httpd-vhosts.conf# 第一個是如果沒有符合的網址，就會導到這裡&lt;VirtualHost *:1337&gt; DocumentRoot &quot;/your/project/site&quot; ServerName my.default.site.local ErrorLog &quot;/your/logs/error.log&quot;&lt;/VirtualHost&gt;# 之後的就隨意了&lt;VirtualHost *:1337&gt; DocumentRoot &quot;/Users/tri613/workspace/www/my-project&quot; ServerName myproject.local ErrorLog &quot;/Users/tri613/workspace/www/log/myproject@error_log&quot;&lt;/VirtualHost&gt; 以上內容只是範例啦，我都很懶惰只有指定這幾項而已ＸＤ 另外就是要注意 etc/hosts 這隻檔案要加上hosts， 不然打剛剛自己設定的網址是會找不到的。123# etc/hosts# 以上面的virtual hosts為例127.0.0.1 myproject.local 大致上就是這些！ 安裝 Mysql先去官方網站下載，然後安裝，結束～～～（誤） 安裝過程會有一串預設的密碼要記著， 不然到時候沒密碼會登不進去。 安裝好了以後，要記得先到 系統偏好設定 裡面找到mysql並把mysql server開啟，不然不能用的。 接下來就先加環境變數吧！（我絕對不會說我為了加這個把其他的指令都蓋掉惹）12# 一開始應該都不會有這個檔案，所以就建一個新的$ touch ~/.bash_profile 然後在 .bash_profile 裡面加上1export PATH=/usr/local/mysql/bin:$PATH 這行就可以了！ 接下來就是一些mysql的初始設定等等摟。12345//首次登入$ mysql -u root -p //輸入剛才安裝中給的預設密碼//登入成功後，要先換密碼mysql &gt; SET PASSWORD = PASSWORD('your_new_password'); 到這裡就可以用root身份進行一般mysql操作了，通常後續還會創root以外的使用者等等的，但因為是本地開發所以就先忽略哈哈。 確定mysql可以用了以後，就是把PHP跟mysql連在一起啦～1234cd /varmkdir mysqlcd mysqlln -s /tmp/mysql.sock mysql.sock 到這裡就完成基本的MAMP架設啦～ 雖然感覺很簡單但我也是裝了兩遍啊哈哈哈～～～（謎 參考資料 [Mac]不用懶人包，在 OS X 上安裝 Apache, PHP, MySQL Apache2: ‘AH01630: client denied by server configuration’","categories":[],"tags":[{"name":"mamp","slug":"mamp","permalink":"http://tri613.github.io/tags/mamp/"},{"name":"osx","slug":"osx","permalink":"http://tri613.github.io/tags/osx/"}]},{"title":"Network settings for virtualbox","slug":"vm-network-settings","date":"2016-11-21T08:49:04.000Z","updated":"2017-06-20T05:20:23.949Z","comments":true,"path":"2016/11/21/vm-network-settings/","link":"","permalink":"http://tri613.github.io/2016/11/21/vm-network-settings/","excerpt":"VM: CentOS 6.5 Host: Windows7","text":"VM: CentOS 6.5 Host: Windows7 VM 設定 網卡設定 第一張設 NAT 第二張設 橋接介面卡 確認 VM 網卡設定 1$ ifconfig 確認兩張網卡都有開 eth0 / eth1 沒有的話，就啟動網卡1$ ifconfig &#123;eth0|eth1&#125; &#123;up|down&#125; VM網卡設定 1$ vim /etc/sysconfig/network-scripts/ifcfg-&#123;eth0|eth1&#125; eth0 (NAT) 基本上原本的設定就好，不用改 12345DEVICE=eth0BOOTPROTO=dhcpHWADDR=08:00:27:92:0E:1F #your mac addressONBOOT=yesTYPE=Ethernet eth1 (橋接) 12345678910DEVICE=eth1#BOOTPROTO=none#BROADCAST=192.168.XXX.255HWADDR=08:00:27:79:90:9d #your mac addressIPADDR=192.168.XXX.VVVNETMASK=255.255.255.0#NETWORK=192.168.XXX.0ONBOOT=yes#GATEWAY=192.168.XXX.1TYPE=Ethernet 設定完記得重啟1$ /etc/init.d/network restart 檢查連線 1$ ping 8.8.8.8 本機設定 確定有加網路區段 區域連線 &gt; IPv4 &gt; 進階 &gt; IP設定 增加和VM同網段的IP位址 192.168.XXX.LLL 檢查是否連得到 VM 1$ ping 192.168.XXX.VVV 其他設定 關閉防火牆 1$ service iptables stop 設定開機時不會開起防火牆 1$ chkconfig iptables off","categories":[],"tags":[{"name":"vm","slug":"vm","permalink":"http://tri613.github.io/tags/vm/"},{"name":"network","slug":"network","permalink":"http://tri613.github.io/tags/network/"},{"name":"linux","slug":"linux","permalink":"http://tri613.github.io/tags/linux/"}]},{"title":"css fallback for IE(11+)","slug":"css-fallback-for-ie","date":"2016-11-21T08:45:40.000Z","updated":"2017-06-20T05:23:11.850Z","comments":true,"path":"2016/11/21/css-fallback-for-ie/","link":"","permalink":"http://tri613.github.io/2016/11/21/css-fallback-for-ie/","excerpt":"我也不知道我當初為什麼會硬著頭皮寫英文的，反正就是英文的了哈哈哈","text":"我也不知道我當初為什麼會硬著頭皮寫英文的，反正就是英文的了哈哈哈 1. grayscale 12-webkit-filter:grayscale(100%);filter:grayscale(100%); use javascript. see tutorial here. or just simply use picture in gray. (haha) 2. object-fit / object-position1234-o-object-fit:cover; object-fit:cover;-o-object-position:center; object-position:center; IE doesn’t support object-fit after IE10,so use background-size and background-position instead. 3. vertical centering with css translateAs the question asked here,when using css translate to center contents,after scrolling the webpage, IE would somehow translate dom elements in the way that were not expected. This is what i encountered: The original page looks like this.After scrolling to other section(with jquery), the first section was “moved up”. The html and css:12345678910111213&lt;!-- the first section in the picture --&gt;&lt;div class=\"page\" id=\"first-section\"&gt; &lt;div class=\"page-content\"&gt; &lt;!-- some contents here --&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- some other sections --&gt;&lt;div class=\"page\"&gt; &lt;div class=\"page-content\" id=\"other-section\"&gt; &lt;!-- some contents here --&gt; &lt;/div&gt;&lt;/div&gt;... 1234567891011.page &#123; height: 100vh; min-height: 850px;&#125;.page-content &#123; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); -webkit-transform: translate(-50%, -50%);&#125; I found out it’s the css in .page-content that caused the unexpected translation (in IE only of course),so after using bottom and right instead of top and right as suggested,everything works fine magically again! 12345678/* this works in IE (and all other browsers) */.page-content &#123; position: absolute; bottom: 50%; right: 50%; transform: translate(50%,50%); -webkit-transform: translate(50%,50%);&#125; Guess this is just some kind of bug in IE, since this doesn’t happen in other browsers. Stupid IE.","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://tri613.github.io/tags/css/"},{"name":"ie","slug":"ie","permalink":"http://tri613.github.io/tags/ie/"}]},{"title":":nth-child v.s. :nth-of-type","slug":"nth-child-vs-nth-of-type","date":"2016-11-21T07:55:37.000Z","updated":"2017-06-20T05:23:34.336Z","comments":true,"path":"2016/11/21/nth-child-vs-nth-of-type/","link":"","permalink":"http://tri613.github.io/2016/11/21/nth-child-vs-nth-of-type/","excerpt":"一直搞混所以認真研究一下他們的不同之處。","text":"一直搞混所以認真研究一下他們的不同之處。 :nth-child:nth-child 最容易誤會的地方是，它並不是搜尋父元素下的第幾個順序的selector子元素，而是單純在父元素下的第幾個子元素，基本上跟元素本身type或selector無關，selector只是附加限制條件。 12345678910&lt;div class=\"parent\"&gt; &lt;div class=\"child-div\"&gt;&lt;/div&gt; &lt;!-- .parent .child-div:nth-child(1) --&gt; &lt;div class=\"child-div\"&gt;&lt;/div&gt; &lt;!-- .parent .child-div:nth-child(2) --&gt; &lt;a class=\"child-a\"&gt;&lt;/a&gt; &lt;!-- .parent .child-a:nth-child(3) --&gt; &lt;a class=\"child-a\"&gt;&lt;/a&gt; &lt;!-- .parent .child-a:nth-child(4) --&gt;&lt;/div&gt; 123456.parent .child-div:nth-child(2) &#123; color:red; /* this will work */&#125;.parent .child-a:nth-child(1) &#123; color:blue; /* this won't work */&#125; :nth-of-type:nth-of-type 就比較偏向搜尋某個父元素下面的第幾個指定類型的子元素，但要注意的是它只能指定html的本身的種類（像是&lt;a&gt;、&lt;div&gt;等等），而不能用class名稱做為selector。 12345678910&lt;div class=\"parent\"&gt; &lt;div class=\"child-div\"&gt;&lt;/div&gt; &lt;!-- .parent div:nth-of-type(1) --&gt; &lt;div class=\"child-div\"&gt;&lt;/div&gt; &lt;!-- .parent div:nth-of-type(2) --&gt; &lt;a class=\"child-a\"&gt;&lt;/a&gt; &lt;!-- .parent a:nth-of-type(1) --&gt; &lt;a class=\"child-a\"&gt;&lt;/a&gt; &lt;!-- .parent a:nth-of-type(2) --&gt;&lt;/div&gt;","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://tri613.github.io/tags/css/"}]}]}